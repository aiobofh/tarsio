* TODO 00 2020-02-17 Improve line and branch coverage in refactoring :tarsio:

  As a software developer I want Tarsio to have better code coverage to ensure
  quality, and provide good examples on how to write Tarsio-checks

* DONE 00 2020-02-17 Remove as much "test" in benefit of "check"     :tarsio:

  As the author of Tarsio I want better consistency of the usage of the words
  testing and checking to be less confusing.

* TODO 00 2020-02-18 Make Travis CI work for developing Tarsio       :tarsio:

  As a maintainer of Tarsio I would like continuous integration when commits
  are pushed to the repository, to make it easier to find errors and flaws in
  the code base.

* TODO 00 2020-02-19 Fix parsing of LF in function headers           :tarsio:

  As a developer I want the freedom to have linefeeds in the function headers
  in order to keep my code pretty.

* TODO 00 2022-07-31 Repalce the finnicky parsers/lexers             :tarsio:

  As a maintainer I want a better (more generic) parser so that developers
  and SDK's can have any kind of function prototoypes and still be able to
  make Tarsio automock. The current implementation works most of the time,
  but it could be better.

* DONE 00 2020-02-22 Split ttg.c into a more static .c-file and gen  :tarsio:

  As a maintainer I do not want so much statically generated code in ttg.c,
  since it makes things hard to understand and also fragile. I need a tarsio.c
  file that is containing all the static functionality for running checks that
  can be compiled once and for all for each project (rather than cumbersome
  linking) and reused between check-suites too.
